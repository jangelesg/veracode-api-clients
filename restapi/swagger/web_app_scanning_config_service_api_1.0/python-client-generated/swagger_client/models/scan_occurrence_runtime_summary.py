# coding: utf-8

"""
    Veracode Web Application Scanning Configuration Service API

    Web Application Scanning Configuration API Documentation  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: veracode@veracode.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class ScanOccurrenceRuntimeSummary(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'bytes_received': 'int',
        'bytes_sent': 'int',
        'completed': 'bool',
        'duration': 'int',
        'end': 'str',
        'exit_status': 'str',
        'links_audited': 'int',
        'links_crawled': 'int',
        'login_failures': 'int',
        'login_successes': 'int',
        'network_errors': 'int',
        'port_shutdowns': 'int',
        'requests': 'int',
        'responses': 'int',
        'start': 'str'
    }

    attribute_map = {
        'bytes_received': 'bytes_received',
        'bytes_sent': 'bytes_sent',
        'completed': 'completed',
        'duration': 'duration',
        'end': 'end',
        'exit_status': 'exit_status',
        'links_audited': 'links_audited',
        'links_crawled': 'links_crawled',
        'login_failures': 'login_failures',
        'login_successes': 'login_successes',
        'network_errors': 'network_errors',
        'port_shutdowns': 'port_shutdowns',
        'requests': 'requests',
        'responses': 'responses',
        'start': 'start'
    }

    def __init__(self, bytes_received=None, bytes_sent=None, completed=None, duration=None, end=None, exit_status=None, links_audited=None, links_crawled=None, login_failures=None, login_successes=None, network_errors=None, port_shutdowns=None, requests=None, responses=None, start=None):  # noqa: E501
        """ScanOccurrenceRuntimeSummary - a model defined in Swagger"""  # noqa: E501

        self._bytes_received = None
        self._bytes_sent = None
        self._completed = None
        self._duration = None
        self._end = None
        self._exit_status = None
        self._links_audited = None
        self._links_crawled = None
        self._login_failures = None
        self._login_successes = None
        self._network_errors = None
        self._port_shutdowns = None
        self._requests = None
        self._responses = None
        self._start = None
        self.discriminator = None

        if bytes_received is not None:
            self.bytes_received = bytes_received
        if bytes_sent is not None:
            self.bytes_sent = bytes_sent
        if completed is not None:
            self.completed = completed
        if duration is not None:
            self.duration = duration
        if end is not None:
            self.end = end
        if exit_status is not None:
            self.exit_status = exit_status
        if links_audited is not None:
            self.links_audited = links_audited
        if links_crawled is not None:
            self.links_crawled = links_crawled
        if login_failures is not None:
            self.login_failures = login_failures
        if login_successes is not None:
            self.login_successes = login_successes
        if network_errors is not None:
            self.network_errors = network_errors
        if port_shutdowns is not None:
            self.port_shutdowns = port_shutdowns
        if requests is not None:
            self.requests = requests
        if responses is not None:
            self.responses = responses
        if start is not None:
            self.start = start

    @property
    def bytes_received(self):
        """Gets the bytes_received of this ScanOccurrenceRuntimeSummary.  # noqa: E501

        The number of bytes received, nullable.  # noqa: E501

        :return: The bytes_received of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :rtype: int
        """
        return self._bytes_received

    @bytes_received.setter
    def bytes_received(self, bytes_received):
        """Sets the bytes_received of this ScanOccurrenceRuntimeSummary.

        The number of bytes received, nullable.  # noqa: E501

        :param bytes_received: The bytes_received of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :type: int
        """

        self._bytes_received = bytes_received

    @property
    def bytes_sent(self):
        """Gets the bytes_sent of this ScanOccurrenceRuntimeSummary.  # noqa: E501

        The number of bytes sent, nullable.  # noqa: E501

        :return: The bytes_sent of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :rtype: int
        """
        return self._bytes_sent

    @bytes_sent.setter
    def bytes_sent(self, bytes_sent):
        """Sets the bytes_sent of this ScanOccurrenceRuntimeSummary.

        The number of bytes sent, nullable.  # noqa: E501

        :param bytes_sent: The bytes_sent of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :type: int
        """

        self._bytes_sent = bytes_sent

    @property
    def completed(self):
        """Gets the completed of this ScanOccurrenceRuntimeSummary.  # noqa: E501

        Returns true if the URL scan occurrence is complete.  # noqa: E501

        :return: The completed of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :rtype: bool
        """
        return self._completed

    @completed.setter
    def completed(self, completed):
        """Sets the completed of this ScanOccurrenceRuntimeSummary.

        Returns true if the URL scan occurrence is complete.  # noqa: E501

        :param completed: The completed of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :type: bool
        """

        self._completed = completed

    @property
    def duration(self):
        """Gets the duration of this ScanOccurrenceRuntimeSummary.  # noqa: E501

        The UTC elapsed runtime of the job, in milliseconds, nullable.  # noqa: E501

        :return: The duration of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this ScanOccurrenceRuntimeSummary.

        The UTC elapsed runtime of the job, in milliseconds, nullable.  # noqa: E501

        :param duration: The duration of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :type: int
        """

        self._duration = duration

    @property
    def end(self):
        """Gets the end of this ScanOccurrenceRuntimeSummary.  # noqa: E501

        The end time of the job, ISO-8601-format date and time, nullable.  # noqa: E501

        :return: The end of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :rtype: str
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this ScanOccurrenceRuntimeSummary.

        The end time of the job, ISO-8601-format date and time, nullable.  # noqa: E501

        :param end: The end of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :type: str
        """

        self._end = end

    @property
    def exit_status(self):
        """Gets the exit_status of this ScanOccurrenceRuntimeSummary.  # noqa: E501

        The exit status of the job, nullable.  # noqa: E501

        :return: The exit_status of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :rtype: str
        """
        return self._exit_status

    @exit_status.setter
    def exit_status(self, exit_status):
        """Sets the exit_status of this ScanOccurrenceRuntimeSummary.

        The exit status of the job, nullable.  # noqa: E501

        :param exit_status: The exit_status of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :type: str
        """

        self._exit_status = exit_status

    @property
    def links_audited(self):
        """Gets the links_audited of this ScanOccurrenceRuntimeSummary.  # noqa: E501

        The number of links auditted, nullable.  # noqa: E501

        :return: The links_audited of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :rtype: int
        """
        return self._links_audited

    @links_audited.setter
    def links_audited(self, links_audited):
        """Sets the links_audited of this ScanOccurrenceRuntimeSummary.

        The number of links auditted, nullable.  # noqa: E501

        :param links_audited: The links_audited of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :type: int
        """

        self._links_audited = links_audited

    @property
    def links_crawled(self):
        """Gets the links_crawled of this ScanOccurrenceRuntimeSummary.  # noqa: E501

        The number of links crawled, nullable.  # noqa: E501

        :return: The links_crawled of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :rtype: int
        """
        return self._links_crawled

    @links_crawled.setter
    def links_crawled(self, links_crawled):
        """Sets the links_crawled of this ScanOccurrenceRuntimeSummary.

        The number of links crawled, nullable.  # noqa: E501

        :param links_crawled: The links_crawled of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :type: int
        """

        self._links_crawled = links_crawled

    @property
    def login_failures(self):
        """Gets the login_failures of this ScanOccurrenceRuntimeSummary.  # noqa: E501

        The total number of failed logins, nullable.  # noqa: E501

        :return: The login_failures of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :rtype: int
        """
        return self._login_failures

    @login_failures.setter
    def login_failures(self, login_failures):
        """Sets the login_failures of this ScanOccurrenceRuntimeSummary.

        The total number of failed logins, nullable.  # noqa: E501

        :param login_failures: The login_failures of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :type: int
        """

        self._login_failures = login_failures

    @property
    def login_successes(self):
        """Gets the login_successes of this ScanOccurrenceRuntimeSummary.  # noqa: E501

        The total number of successful logins, nullable.  # noqa: E501

        :return: The login_successes of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :rtype: int
        """
        return self._login_successes

    @login_successes.setter
    def login_successes(self, login_successes):
        """Sets the login_successes of this ScanOccurrenceRuntimeSummary.

        The total number of successful logins, nullable.  # noqa: E501

        :param login_successes: The login_successes of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :type: int
        """

        self._login_successes = login_successes

    @property
    def network_errors(self):
        """Gets the network_errors of this ScanOccurrenceRuntimeSummary.  # noqa: E501

        The total number of network errors encountered, nullable.  # noqa: E501

        :return: The network_errors of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :rtype: int
        """
        return self._network_errors

    @network_errors.setter
    def network_errors(self, network_errors):
        """Sets the network_errors of this ScanOccurrenceRuntimeSummary.

        The total number of network errors encountered, nullable.  # noqa: E501

        :param network_errors: The network_errors of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :type: int
        """

        self._network_errors = network_errors

    @property
    def port_shutdowns(self):
        """Gets the port_shutdowns of this ScanOccurrenceRuntimeSummary.  # noqa: E501

        The number of port shutdowns encountered, nullable.  # noqa: E501

        :return: The port_shutdowns of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :rtype: int
        """
        return self._port_shutdowns

    @port_shutdowns.setter
    def port_shutdowns(self, port_shutdowns):
        """Sets the port_shutdowns of this ScanOccurrenceRuntimeSummary.

        The number of port shutdowns encountered, nullable.  # noqa: E501

        :param port_shutdowns: The port_shutdowns of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :type: int
        """

        self._port_shutdowns = port_shutdowns

    @property
    def requests(self):
        """Gets the requests of this ScanOccurrenceRuntimeSummary.  # noqa: E501

        The total number of requests, nullable.  # noqa: E501

        :return: The requests of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :rtype: int
        """
        return self._requests

    @requests.setter
    def requests(self, requests):
        """Sets the requests of this ScanOccurrenceRuntimeSummary.

        The total number of requests, nullable.  # noqa: E501

        :param requests: The requests of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :type: int
        """

        self._requests = requests

    @property
    def responses(self):
        """Gets the responses of this ScanOccurrenceRuntimeSummary.  # noqa: E501

        The total number of responses received, nullable.  # noqa: E501

        :return: The responses of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :rtype: int
        """
        return self._responses

    @responses.setter
    def responses(self, responses):
        """Sets the responses of this ScanOccurrenceRuntimeSummary.

        The total number of responses received, nullable.  # noqa: E501

        :param responses: The responses of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :type: int
        """

        self._responses = responses

    @property
    def start(self):
        """Gets the start of this ScanOccurrenceRuntimeSummary.  # noqa: E501

        The start time of the job, ISO-8601-format date and time, nullable.  # noqa: E501

        :return: The start of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :rtype: str
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this ScanOccurrenceRuntimeSummary.

        The start time of the job, ISO-8601-format date and time, nullable.  # noqa: E501

        :param start: The start of this ScanOccurrenceRuntimeSummary.  # noqa: E501
        :type: str
        """

        self._start = start

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ScanOccurrenceRuntimeSummary, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ScanOccurrenceRuntimeSummary):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
